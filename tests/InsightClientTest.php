<?php
use PHPUnit\Framework\TestCase;
use GuzzleHttp\Handler\MockHandler;
use GuzzleHttp\HandlerStack;
use GuzzleHttp\Psr7\Response;
use GuzzleHttp\Psr7\Request;

final class InsightClientTest extends TestCase {
  public function testGetCurrencyRate_whenSuccessfull_returnsRate() {
    // Create a mock response
    $jsonData = '{"status":200,"data":{"bitstamp":0.9999999}}';
    $mock = new MockHandler([
      new Response(200, ['Content-Type' => 'application/json'], $jsonData)
    ]);
    $handler = HandlerStack::create($mock);

    // execute the test
    $client = New InsightClient('http://localhost:3001/api/', $handler);
    $currencyRate = $client->getCurrency();

    $this->assertEquals(0.9999999, $currencyRate);
  }

  public function testGetCurrencyRate_whenUnSuccessfull_throwsException() {
    // Create a mock response
    $mock = new MockHandler([
      new Response(400, ['Content-Type' => 'application/json'], '')
    ]);
    $handler = HandlerStack::create($mock);

    // execute the test
    $this->expectException(Exception::class);
    $client = New InsightClient('http://localhost:3001/api/', $handler);
    $currencyRate = $client->getCurrency();
  }

  public function testGetBlock_whenSuccessful_returnsBlockData() {
    // Create a mock Response
    $jsonData = file_get_contents('tests/data/block_result.json');
    $mock = new MockHandler([
      new Response(200, ['Content-Type' => 'application/json'], $jsonData)
    ]);
    $handler = HandlerStack::create($mock);

    $client = New InsightClient('http://localhost:3001/api/', $handler);
    $block = $client->getBlock('00000000d04e25af567af32e1d4ee508036adfeba99f69290e7e85376382d092');

    // execute the test
    $this->assertEquals([
      'hash' => '00000000d04e25af567af32e1d4ee508036adfeba99f69290e7e85376382d092',
      'size' => 3639,
      'height' => 81498,
      'version' => 4,
      'merkleroot' => 'fb877ae1fba230c86e7e09ff56889b07924a8161966bb607a7acebb3a3cdd171',
      'tx' => [
                '9f1c84de38fca12bcf360ecaba163269bcc4cc7443b84d8257bd2b27a98cd2f6',
                '1f37fff5063b4fcea4e4994c0ddda680a842069d3d8d59e265b130edf9df6aa9'
              ],
      'time' => 1517291987,
      'nonce' => '010000000000000000000000050657a10dbf237800000000000000007823bf0c',
      'solution' => '0116b65973d962770c4c535c05e99871aa6c7c6b9f038f3eea9488b7a1f7ad86418cef420de45293ecb9187c1cbfd4ab99d15d8c71edd0502c26d3dadbaa434601a35d135a1b3dd0973620fff38525ba5aee86c5049b5a261f819fb4e16a10efa646be54afa13a399e1d3e7acc0dd5094327bfe4df2ce327a1e791d883e00df0827dbc5f3297b598e49429afcdf6df36fa076b1cfe620e08939a3da0fe324ad8142491531a8ee2a901a3791630507a6b5230e134e890bcdefee27cb22ea1ff363172f3c02dd7124c7369e67c5fc8db7e896f110825ad9685a4590e14f29d6b7225a926b3b3260474d18f0687751f67bb232915c953c5d6fa25de81cb05d1f30a92b2f867b978a3d41cbd1a5936e11ed116191d63f818341c29c8c2884697e1f69b0f621a181923ab86471011ece715bb2a8e186ee012d7d47f71422b45597c76102bab7a3bf34a01e36cb5187e0c439001f44669b76295a1f8d5585e1771feae6eae765c2c0974bdbca5059151fd86977a8e63402b4943ff585604e8c6ad8aa5760f968f507c704caa4d6e3b322d8e38059dcee094fd04b667258c0fc9776e28db18a306093ecffcffc27dfcbedac3824af8f4016bb672e6c975b3ef8ada9f0578fa30b7c79ee2c24a2b3e5836050af30cb5519c0899b9df95a1b45d60a9d173cf5fdb1711ac82327f3083fead35df7d79af817d385d1fd803702ba5f00535993088b16f6c3d1acf25a5df7f7a0d951e84faa1e571c83c63628faf15665b58f5b69b0baf597f14072c0b30e6041a56caef31a3f43cf19654f84bb4a658da494e0f39330878463f2624da109718de3c80ac33b07fb43003ee6e787ea1ca7b112fa4199c1701b12a5e3ff0e1d3249b7ee0aa72cc3a02402738d4015aa815839c1ee83fee4ef8b68117b68b112f1264641c8e83a56939f4aa2ffa5b3dd43d56c32902aa76116336c3a1dfde91f8c1d8ba5a59f5b7fbcf142eccf472d6141f8a3612efb9758749a78d9b00931f5d112d8e940aaefb15c540e6ec330363f2ff3a25216841b5e922e31b3a9e078f48e1bbff72a95f660d084cfe387d637887b87af1bce6fa08c2047affe4841ad803b3998ed6e9bcc382ec42f4db7ef6f3da26d61361c9070409dfa9b95706cb3f75ef3ae35f5d41192f2ed226e3e0e7e1a02d7306cb192316202a5f912902f1413aecd7ca2d06bfb062756ed0e850519f798d03326f9637453a206156d0ef358a69697aacfb792407ca15ddd94432114aa273ffe9cf2c2e78e4ba79dc2954073d88163535b7fb84b7b85980a5b93e55762809c1551686ed1d2fbdf5214d14247f59fd47d4af26279a9a30480a99971eb197c65f6a0c56a1889bc0b80bb4d460f58b477eec02820eaa38fddadbadbe1b790dfb2e102a03af9780b925f3a3bf52da11faf0f07005b9763263188857d2d0341796cc257535238aefda1396f0a9b51b4cad90bb9798d46c3c1e454c97066f0ee5da5f37f5b549df1fc314275f7a79ef721a618d1796315bbc2da9939b2a926ecea98f99b65858a8840624027cc08c142c798a73cc1651fbbd087e7fc89818d04d2a47d071c15051f4ecc66c77cd9a70f4e8521458d9f2f78615e8f251f31955aaec75e3bed39f081e7b05559a8b57731373961f42b60f1ba1de7d29340a3d097667925a150cb8143e915efcb16f1b18a381279fc734f93d5cd1eb48037200eb0a61ccff59d0b20a9f4e7197462e61788df825536988c75855de302e28e7f59c909d5c93400362ed6776a98cd3161417f916283d2f1db66297c7d2216ec5636c4d5a2b979d331ad78c2038b4e235d1e6b2773a24da5157f4152fe8168ce1c325284d91cab6d253ad3c27d271ef5fabc355c5b4819c9d10efc3c1a5c8aaef3aaba032dea68a',
      'bits' => '1d030a63',
      'difficulty' => 172430.32128751,
      'chainwork' => '0000000000000000000000000000000000000000000000000000382cfb7fc55c',
      'confirmations' => 7,
      'previousblockhash' => '0000000102775a7023264600ea629baf75e76438d680486c1e8aa99542f2f316',
      'nextblockhash' => '00000000e7cb15c3901a607b2d8c5d89003e1f28e0a85c6ab8769237da287347',
      'reward' => 12.5,
      'isMainChain' => 1,
      'poolInfo' => []
    ], $block);
  }

  public function testGetBlockByHeight_whenSuccessful_returnsBlockData() {
    // Create a mock Response
    $jsonData1 = '{"blockHash":"00000000d04e25af567af32e1d4ee508036adfeba99f69290e7e85376382d092"}';
    $jsonData2 = file_get_contents('tests/data/block_result.json');
    $mock = new MockHandler([
      new Response(200, ['Content-Type' => 'application/json'], $jsonData1),
      new Response(200, ['Content-Type' => 'application/json'], $jsonData2)
    ]);
    $handler = HandlerStack::create($mock);

    // execute the test
    $client = New InsightClient('http://localhost:3001/api/', $handler);
    $block = $client->getBlockByHeight(81498);

    $this->assertEquals([
      'hash' => '00000000d04e25af567af32e1d4ee508036adfeba99f69290e7e85376382d092',
      'size' => 3639,
      'height' => 81498,
      'version' => 4,
      'merkleroot' => 'fb877ae1fba230c86e7e09ff56889b07924a8161966bb607a7acebb3a3cdd171',
      'tx' => [
                '9f1c84de38fca12bcf360ecaba163269bcc4cc7443b84d8257bd2b27a98cd2f6',
                '1f37fff5063b4fcea4e4994c0ddda680a842069d3d8d59e265b130edf9df6aa9'
              ],
      'time' => 1517291987,
      'nonce' => '010000000000000000000000050657a10dbf237800000000000000007823bf0c',
      'solution' => '0116b65973d962770c4c535c05e99871aa6c7c6b9f038f3eea9488b7a1f7ad86418cef420de45293ecb9187c1cbfd4ab99d15d8c71edd0502c26d3dadbaa434601a35d135a1b3dd0973620fff38525ba5aee86c5049b5a261f819fb4e16a10efa646be54afa13a399e1d3e7acc0dd5094327bfe4df2ce327a1e791d883e00df0827dbc5f3297b598e49429afcdf6df36fa076b1cfe620e08939a3da0fe324ad8142491531a8ee2a901a3791630507a6b5230e134e890bcdefee27cb22ea1ff363172f3c02dd7124c7369e67c5fc8db7e896f110825ad9685a4590e14f29d6b7225a926b3b3260474d18f0687751f67bb232915c953c5d6fa25de81cb05d1f30a92b2f867b978a3d41cbd1a5936e11ed116191d63f818341c29c8c2884697e1f69b0f621a181923ab86471011ece715bb2a8e186ee012d7d47f71422b45597c76102bab7a3bf34a01e36cb5187e0c439001f44669b76295a1f8d5585e1771feae6eae765c2c0974bdbca5059151fd86977a8e63402b4943ff585604e8c6ad8aa5760f968f507c704caa4d6e3b322d8e38059dcee094fd04b667258c0fc9776e28db18a306093ecffcffc27dfcbedac3824af8f4016bb672e6c975b3ef8ada9f0578fa30b7c79ee2c24a2b3e5836050af30cb5519c0899b9df95a1b45d60a9d173cf5fdb1711ac82327f3083fead35df7d79af817d385d1fd803702ba5f00535993088b16f6c3d1acf25a5df7f7a0d951e84faa1e571c83c63628faf15665b58f5b69b0baf597f14072c0b30e6041a56caef31a3f43cf19654f84bb4a658da494e0f39330878463f2624da109718de3c80ac33b07fb43003ee6e787ea1ca7b112fa4199c1701b12a5e3ff0e1d3249b7ee0aa72cc3a02402738d4015aa815839c1ee83fee4ef8b68117b68b112f1264641c8e83a56939f4aa2ffa5b3dd43d56c32902aa76116336c3a1dfde91f8c1d8ba5a59f5b7fbcf142eccf472d6141f8a3612efb9758749a78d9b00931f5d112d8e940aaefb15c540e6ec330363f2ff3a25216841b5e922e31b3a9e078f48e1bbff72a95f660d084cfe387d637887b87af1bce6fa08c2047affe4841ad803b3998ed6e9bcc382ec42f4db7ef6f3da26d61361c9070409dfa9b95706cb3f75ef3ae35f5d41192f2ed226e3e0e7e1a02d7306cb192316202a5f912902f1413aecd7ca2d06bfb062756ed0e850519f798d03326f9637453a206156d0ef358a69697aacfb792407ca15ddd94432114aa273ffe9cf2c2e78e4ba79dc2954073d88163535b7fb84b7b85980a5b93e55762809c1551686ed1d2fbdf5214d14247f59fd47d4af26279a9a30480a99971eb197c65f6a0c56a1889bc0b80bb4d460f58b477eec02820eaa38fddadbadbe1b790dfb2e102a03af9780b925f3a3bf52da11faf0f07005b9763263188857d2d0341796cc257535238aefda1396f0a9b51b4cad90bb9798d46c3c1e454c97066f0ee5da5f37f5b549df1fc314275f7a79ef721a618d1796315bbc2da9939b2a926ecea98f99b65858a8840624027cc08c142c798a73cc1651fbbd087e7fc89818d04d2a47d071c15051f4ecc66c77cd9a70f4e8521458d9f2f78615e8f251f31955aaec75e3bed39f081e7b05559a8b57731373961f42b60f1ba1de7d29340a3d097667925a150cb8143e915efcb16f1b18a381279fc734f93d5cd1eb48037200eb0a61ccff59d0b20a9f4e7197462e61788df825536988c75855de302e28e7f59c909d5c93400362ed6776a98cd3161417f916283d2f1db66297c7d2216ec5636c4d5a2b979d331ad78c2038b4e235d1e6b2773a24da5157f4152fe8168ce1c325284d91cab6d253ad3c27d271ef5fabc355c5b4819c9d10efc3c1a5c8aaef3aaba032dea68a',
      'bits' => '1d030a63',
      'difficulty' => 172430.32128751,
      'chainwork' => '0000000000000000000000000000000000000000000000000000382cfb7fc55c',
      'confirmations' => 7,
      'previousblockhash' => '0000000102775a7023264600ea629baf75e76438d680486c1e8aa99542f2f316',
      'nextblockhash' => '00000000e7cb15c3901a607b2d8c5d89003e1f28e0a85c6ab8769237da287347',
      'reward' => 12.5,
      'isMainChain' => 1,
      'poolInfo' => []
    ], $block);
  }

  public function testGetRawBlock_whenSuccessful_returnsRawBlock() {
    // Create a mock Response
    $jsonData = file_get_contents('tests/data/rawblock.json');
    $mock = new MockHandler([
      new Response(200, ['Content-Type' => 'application/json'], $jsonData)
    ]);
    $handler = HandlerStack::create($mock);

    // execute the test
    $client = New InsightClient('http://localhost:3001/api/', $handler);
    $block = $client->getRawBlock('00000000d04e25af567af32e1d4ee508036adfeba99f69290e7e85376382d092');
    $this->assertEquals(
      '0400000016f3f24295a98a1e6c4880d63864e775af9b62ea00462623705a77020100000071d1cda3b3ebaca707b66b9661814a92079b8856ff097e6ec830a2fbe17a87fb0000000000000000000000000000000000000000000000000000000000000000d309705a630a031d0cbf237800000000000000007823bf0da1570605000000000000000000000001fd40050116b65973d962770c4c535c05e99871aa6c7c6b9f038f3eea9488b7a1f7ad86418cef420de45293ecb9187c1cbfd4ab99d15d8c71edd0502c26d3dadbaa434601a35d135a1b3dd0973620fff38525ba5aee86c5049b5a261f819fb4e16a10efa646be54afa13a399e1d3e7acc0dd5094327bfe4df2ce327a1e791d883e00df0827dbc5f3297b598e49429afcdf6df36fa076b1cfe620e08939a3da0fe324ad8142491531a8ee2a901a3791630507a6b5230e134e890bcdefee27cb22ea1ff363172f3c02dd7124c7369e67c5fc8db7e896f110825ad9685a4590e14f29d6b7225a926b3b3260474d18f0687751f67bb232915c953c5d6fa25de81cb05d1f30a92b2f867b978a3d41cbd1a5936e11ed116191d63f818341c29c8c2884697e1f69b0f621a181923ab86471011ece715bb2a8e186ee012d7d47f71422b45597c76102bab7a3bf34a01e36cb5187e0c439001f44669b76295a1f8d5585e1771feae6eae765c2c0974bdbca5059151fd86977a8e63402b4943ff585604e8c6ad8aa5760f968f507c704caa4d6e3b322d8e38059dcee094fd04b667258c0fc9776e28db18a306093ecffcffc27dfcbedac3824af8f4016bb672e6c975b3ef8ada9f0578fa30b7c79ee2c24a2b3e5836050af30cb5519c0899b9df95a1b45d60a9d173cf5fdb1711ac82327f3083fead35df7d79af817d385d1fd803702ba5f00535993088b16f6c3d1acf25a5df7f7a0d951e84faa1e571c83c63628faf15665b58f5b69b0baf597f14072c0b30e6041a56caef31a3f43cf19654f84bb4a658da494e0f39330878463f2624da109718de3c80ac33b07fb43003ee6e787ea1ca7b112fa4199c1701b12a5e3ff0e1d3249b7ee0aa72cc3a02402738d4015aa815839c1ee83fee4ef8b68117b68b112f1264641c8e83a56939f4aa2ffa5b3dd43d56c32902aa76116336c3a1dfde91f8c1d8ba5a59f5b7fbcf142eccf472d6141f8a3612efb9758749a78d9b00931f5d112d8e940aaefb15c540e6ec330363f2ff3a25216841b5e922e31b3a9e078f48e1bbff72a95f660d084cfe387d637887b87af1bce6fa08c2047affe4841ad803b3998ed6e9bcc382ec42f4db7ef6f3da26d61361c9070409dfa9b95706cb3f75ef3ae35f5d41192f2ed226e3e0e7e1a02d7306cb192316202a5f912902f1413aecd7ca2d06bfb062756ed0e850519f798d03326f9637453a206156d0ef358a69697aacfb792407ca15ddd94432114aa273ffe9cf2c2e78e4ba79dc2954073d88163535b7fb84b7b85980a5b93e55762809c1551686ed1d2fbdf5214d14247f59fd47d4af26279a9a30480a99971eb197c65f6a0c56a1889bc0b80bb4d460f58b477eec02820eaa38fddadbadbe1b790dfb2e102a03af9780b925f3a3bf52da11faf0f07005b9763263188857d2d0341796cc257535238aefda1396f0a9b51b4cad90bb9798d46c3c1e454c97066f0ee5da5f37f5b549df1fc314275f7a79ef721a618d1796315bbc2da9939b2a926ecea98f99b65858a8840624027cc08c142c798a73cc1651fbbd087e7fc89818d04d2a47d071c15051f4ecc66c77cd9a70f4e8521458d9f2f78615e8f251f31955aaec75e3bed39f081e7b05559a8b57731373961f42b60f1ba1de7d29340a3d097667925a150cb8143e915efcb16f1b18a381279fc734f93d5cd1eb48037200eb0a61ccff59d0b20a9f4e7197462e61788df825536988c75855de302e28e7f59c909d5c93400362ed6776a98cd3161417f916283d2f1db66297c7d2216ec5636c4d5a2b979d331ad78c2038b4e235d1e6b2773a24da5157f4152fe8168ce1c325284d91cab6d253ad3c27d271ef5fabc355c5b4819c9d10efc3c1a5c8aaef3aaba032dea68a0201000000010000000000000000000000000000000000000000000000000000000000000000ffffffff5b035a3e0104d309705a100000000000000000000000000000000040623030363338386139373837386138306632613563383366363233333638643138343436356230363638366462636633303266646166636432323037316362330000000002107bce09230100001976a91415a27279583f620880b33a179650478e12863e6888ac000000000000000017a9144efd76a79f970dc4ac8ea1350de1fc8f6a904e3b870000000002000000000100e40b54020000001976a914bd3c52aa54ace1ac2227dea0f1305db1bf7e6d9b88ac00000000010000000000000000100b0c540200000029f353cb13f9818c965375984cfe69bc801ba88790c220b28c4e1ec891ea69363c283153f25c8bf05d0d11607de369094f7f9fc6c4faa23619a8fc73287250bc91d072a3df33755073a6edbd662961bffc2515ddb1fca2213d85776463e29dde72f9ff9d0cfdb960afe20c8aee8d7e7b1944d1ac1bbad74bb825279df1a061aeb2ce2f9578cc5683ad522d6771b1d5a8db45f5b6aca4522c35e5dd65923efdf81f54b6faa0596e5af5ba745f02aa79568aa87b8496ae92b53a5d3338e155a87193c3aafac5bc3fe8c502d6e4479c31945d86ce0b6f2e11f946a4105eaa81561598345fbe422c79b2f91257c5e5f2ac597e3153416796ab1333cf80f5c0da650bad287f1fc7b09241dcca244a0792f1efcbb53b4235ce358f373d5fd85e6eb9e6021fb1990d37befb1a98507553bd82abc7ca9059f97efdc9339e9ca40ba350749b032b741556f076fd400aded8d4f35d5a655518c4ee81b2f45428958d541e1f84bd0a05da14225f37dafb8f97952d6bcbaa5734f307e27ed0933f6f990367d6d06c9d31de6d3175a2cd849d89b8b82cc34c67a4e4fb3fec1bf679c49ebe3c86217aa302089307c3821512b3f6f5ae8e4cc45483afb2917d72485960a9f578f2d2b2475e022e3909dcfa1b43e2a331d3621f405baae0554ffd246c0b5df2874ca30f6c5f950206cab9996dac8b2e62235d7e50672fac92a87f12546949da633596b64908cbc6031bb5126b365511f525ad5366f0571dd88f40a1ff218f1689f628057afc141f1e032f2f240aba9853076e1f9d65d55fdead106f5888d9dbf4915345b54e82048aa04126fbc65ff4daac720c38b88cef1bff97c3805abdcf1f33a6ff36d0619b67eedaea7d033c162fc3f159b691e58685966787e6e39c09dfbc7ff4503a69a20b8fc18ba1b20a72ea001f9dfd009e20c33beea7e615403b1820d2087021e50c0ba5d3948b232cfc9f7dc0a79e147463cb58db30d22cbfed427c8372251daad288b769f882f00bc64f2e2d78bad8c123a7497f2beed66536da8f6778c909af4054e4083efd96c49eea6adff7ae2ede78ad733b086586f617eb71a129bae3172a3bfb1288b3259d29ebc2c010767ca91b432a9a1e4c9bf2f4d4925889593bb05a5274f6045d75bf67bb2573ff0defaa96a6c0a789031ecb81be1074a9fb05c87c9019b9d5af9e50ae9d1e4e9efbab494f0d3a33281cb26570e16af2f2c31eb4aea286383de775613bf75622b1d58a030042171f8b9fb40b482c5305f69a58c48faea076ea5848dc227d4ec0243baac68345840ffc7e6a7160f0d96141b03055f32456ce4b7782e9c889100d0fc050c8d0af001f751c15625d0725d3fb949795847fa9ec054e0a7a5a40013e2ceed54f8a2de3a8dd58c604d91dd8c2de4e4ee5699a7aca6d77ec2bf4140761e1abd70c7a53cc483471fcee4e00556a6ba714f016bdcf7c64120e32df6e592af42a9d57f2d5d3b33477571a7c6e71e66f1ff77b06991c103c56f75e860c9f0fd9ebd50d8dd54509088c3480d91dbe72879ca2b09eb47dfabf0f7f912c098aa974a6c283edd7e7a63c66a892ed7c31d53081544936ca1d39630b2ed888c3778b5d387bf6e4b0578feaf12206d163b6c13c48d8c272d1c28e32d8394ca8836401ac4e85200e5f81b9f02ea3ac681c120a0d37bbb8d7593dd2e06c51470bdc4c82a2e51657694e60f872b922af9a12dd7b87ba330b357e4812fa6cf8b52a5ac85e1f12476c56636f7e7b222486c993bfa35230c6b64084cdcda87bc141e2ef90bd474db6012df50c77c3f94f3e942b0f6588ea52742534f91d7ac935000d85cd894f4ad7538f98913cbc9e00942bbc31bd072c7cf89bf52e54da6c42e208f99f028c18aaec15682fd05a72df4c09308fe99e946ca4be9773d25c10d68ce7e6590a6a5fd2b3cebd153beb869e7f4a0599f33a61ba2416fd2793340f677f0d43f666459d9b634013550d00480d693d02ac5a266a4530c30a08a2936866fa7c60d8b6e47a04c89e4a760b4490501d15b74f67d55a67df6f91a129c9f829ec53049e3a6faac8998f6e13a8185daff80103592be22da11fb1023fe3ceaabf020b5ee073f0be0764973f70fe2711cf8ec4c9374ca965edb965bf942c77530b9f2bf1ba910879f357c2d422acbcc5d739b13076cf2b29e9ca7fc18565c58cc634b105976cab8a9195591582a43b1c4309baf6969059d8f6daadd753b67116847f0b7d01f5e1425e5a34a54a770e882dc896bf65052315f80d21981561bcd339657122b63993cb3a35339640216144760794d9eb4f2a93096df007dd5b17d72cdd1fe49bfc4cfef3b018644c4256f9cd7c90cc823b1be0a13bf254b1ec661e13fd3a1a19b7fde57fa2f3975e9bb0c6e4def50802b78be073885ce9c0900e3c14c4cf62377ae408993fe8dd0e2650851f5de4355841d49e900ab22d43785ecffce42ecbd81f1a7c388bcd169e94f13cea2444d56b26307368c50e1e5e450d78f6e426aca360bf0c5ab54a50593c85658c0faabe5d35e3ea8c360da7dd63ce3f75165cfd619943ca7f52da00ebd41f6ec27c8017a2e6a10da84e571eee9c98d4adde70cbb8f7b4f60b089039d4e6321406b37a8b3d38e1685e654aa54f180797a00205c86a4234979b30eb65cd7a0a',
      $block
    );
  }

  public function testGetRawBlockByHeight_whenSuccessful_returnsRawBlock() {
    // Create a mock Response
    $jsonData1 = '{"blockHash":"00000000d04e25af567af32e1d4ee508036adfeba99f69290e7e85376382d092"}';
    $jsonData2 = file_get_contents('tests/data/rawblock.json');
    $mock = new MockHandler([
      new Response(200, ['Content-Type' => 'application/json'], $jsonData1),
      new Response(200, ['Content-Type' => 'application/json'], $jsonData2)
    ]);
    $handler = HandlerStack::create($mock);

    // execute the test
    $client = New InsightClient('http://localhost:3001/api/', $handler);
    $block = $client->getRawBlockByHeight(81498);
    $this->assertEquals('0400000016f3f24295a98a1e6c4880d63864e775af9b62ea00462623705a77020100000071d1cda3b3ebaca707b66b9661814a92079b8856ff097e6ec830a2fbe17a87fb0000000000000000000000000000000000000000000000000000000000000000d309705a630a031d0cbf237800000000000000007823bf0da1570605000000000000000000000001fd40050116b65973d962770c4c535c05e99871aa6c7c6b9f038f3eea9488b7a1f7ad86418cef420de45293ecb9187c1cbfd4ab99d15d8c71edd0502c26d3dadbaa434601a35d135a1b3dd0973620fff38525ba5aee86c5049b5a261f819fb4e16a10efa646be54afa13a399e1d3e7acc0dd5094327bfe4df2ce327a1e791d883e00df0827dbc5f3297b598e49429afcdf6df36fa076b1cfe620e08939a3da0fe324ad8142491531a8ee2a901a3791630507a6b5230e134e890bcdefee27cb22ea1ff363172f3c02dd7124c7369e67c5fc8db7e896f110825ad9685a4590e14f29d6b7225a926b3b3260474d18f0687751f67bb232915c953c5d6fa25de81cb05d1f30a92b2f867b978a3d41cbd1a5936e11ed116191d63f818341c29c8c2884697e1f69b0f621a181923ab86471011ece715bb2a8e186ee012d7d47f71422b45597c76102bab7a3bf34a01e36cb5187e0c439001f44669b76295a1f8d5585e1771feae6eae765c2c0974bdbca5059151fd86977a8e63402b4943ff585604e8c6ad8aa5760f968f507c704caa4d6e3b322d8e38059dcee094fd04b667258c0fc9776e28db18a306093ecffcffc27dfcbedac3824af8f4016bb672e6c975b3ef8ada9f0578fa30b7c79ee2c24a2b3e5836050af30cb5519c0899b9df95a1b45d60a9d173cf5fdb1711ac82327f3083fead35df7d79af817d385d1fd803702ba5f00535993088b16f6c3d1acf25a5df7f7a0d951e84faa1e571c83c63628faf15665b58f5b69b0baf597f14072c0b30e6041a56caef31a3f43cf19654f84bb4a658da494e0f39330878463f2624da109718de3c80ac33b07fb43003ee6e787ea1ca7b112fa4199c1701b12a5e3ff0e1d3249b7ee0aa72cc3a02402738d4015aa815839c1ee83fee4ef8b68117b68b112f1264641c8e83a56939f4aa2ffa5b3dd43d56c32902aa76116336c3a1dfde91f8c1d8ba5a59f5b7fbcf142eccf472d6141f8a3612efb9758749a78d9b00931f5d112d8e940aaefb15c540e6ec330363f2ff3a25216841b5e922e31b3a9e078f48e1bbff72a95f660d084cfe387d637887b87af1bce6fa08c2047affe4841ad803b3998ed6e9bcc382ec42f4db7ef6f3da26d61361c9070409dfa9b95706cb3f75ef3ae35f5d41192f2ed226e3e0e7e1a02d7306cb192316202a5f912902f1413aecd7ca2d06bfb062756ed0e850519f798d03326f9637453a206156d0ef358a69697aacfb792407ca15ddd94432114aa273ffe9cf2c2e78e4ba79dc2954073d88163535b7fb84b7b85980a5b93e55762809c1551686ed1d2fbdf5214d14247f59fd47d4af26279a9a30480a99971eb197c65f6a0c56a1889bc0b80bb4d460f58b477eec02820eaa38fddadbadbe1b790dfb2e102a03af9780b925f3a3bf52da11faf0f07005b9763263188857d2d0341796cc257535238aefda1396f0a9b51b4cad90bb9798d46c3c1e454c97066f0ee5da5f37f5b549df1fc314275f7a79ef721a618d1796315bbc2da9939b2a926ecea98f99b65858a8840624027cc08c142c798a73cc1651fbbd087e7fc89818d04d2a47d071c15051f4ecc66c77cd9a70f4e8521458d9f2f78615e8f251f31955aaec75e3bed39f081e7b05559a8b57731373961f42b60f1ba1de7d29340a3d097667925a150cb8143e915efcb16f1b18a381279fc734f93d5cd1eb48037200eb0a61ccff59d0b20a9f4e7197462e61788df825536988c75855de302e28e7f59c909d5c93400362ed6776a98cd3161417f916283d2f1db66297c7d2216ec5636c4d5a2b979d331ad78c2038b4e235d1e6b2773a24da5157f4152fe8168ce1c325284d91cab6d253ad3c27d271ef5fabc355c5b4819c9d10efc3c1a5c8aaef3aaba032dea68a0201000000010000000000000000000000000000000000000000000000000000000000000000ffffffff5b035a3e0104d309705a100000000000000000000000000000000040623030363338386139373837386138306632613563383366363233333638643138343436356230363638366462636633303266646166636432323037316362330000000002107bce09230100001976a91415a27279583f620880b33a179650478e12863e6888ac000000000000000017a9144efd76a79f970dc4ac8ea1350de1fc8f6a904e3b870000000002000000000100e40b54020000001976a914bd3c52aa54ace1ac2227dea0f1305db1bf7e6d9b88ac00000000010000000000000000100b0c540200000029f353cb13f9818c965375984cfe69bc801ba88790c220b28c4e1ec891ea69363c283153f25c8bf05d0d11607de369094f7f9fc6c4faa23619a8fc73287250bc91d072a3df33755073a6edbd662961bffc2515ddb1fca2213d85776463e29dde72f9ff9d0cfdb960afe20c8aee8d7e7b1944d1ac1bbad74bb825279df1a061aeb2ce2f9578cc5683ad522d6771b1d5a8db45f5b6aca4522c35e5dd65923efdf81f54b6faa0596e5af5ba745f02aa79568aa87b8496ae92b53a5d3338e155a87193c3aafac5bc3fe8c502d6e4479c31945d86ce0b6f2e11f946a4105eaa81561598345fbe422c79b2f91257c5e5f2ac597e3153416796ab1333cf80f5c0da650bad287f1fc7b09241dcca244a0792f1efcbb53b4235ce358f373d5fd85e6eb9e6021fb1990d37befb1a98507553bd82abc7ca9059f97efdc9339e9ca40ba350749b032b741556f076fd400aded8d4f35d5a655518c4ee81b2f45428958d541e1f84bd0a05da14225f37dafb8f97952d6bcbaa5734f307e27ed0933f6f990367d6d06c9d31de6d3175a2cd849d89b8b82cc34c67a4e4fb3fec1bf679c49ebe3c86217aa302089307c3821512b3f6f5ae8e4cc45483afb2917d72485960a9f578f2d2b2475e022e3909dcfa1b43e2a331d3621f405baae0554ffd246c0b5df2874ca30f6c5f950206cab9996dac8b2e62235d7e50672fac92a87f12546949da633596b64908cbc6031bb5126b365511f525ad5366f0571dd88f40a1ff218f1689f628057afc141f1e032f2f240aba9853076e1f9d65d55fdead106f5888d9dbf4915345b54e82048aa04126fbc65ff4daac720c38b88cef1bff97c3805abdcf1f33a6ff36d0619b67eedaea7d033c162fc3f159b691e58685966787e6e39c09dfbc7ff4503a69a20b8fc18ba1b20a72ea001f9dfd009e20c33beea7e615403b1820d2087021e50c0ba5d3948b232cfc9f7dc0a79e147463cb58db30d22cbfed427c8372251daad288b769f882f00bc64f2e2d78bad8c123a7497f2beed66536da8f6778c909af4054e4083efd96c49eea6adff7ae2ede78ad733b086586f617eb71a129bae3172a3bfb1288b3259d29ebc2c010767ca91b432a9a1e4c9bf2f4d4925889593bb05a5274f6045d75bf67bb2573ff0defaa96a6c0a789031ecb81be1074a9fb05c87c9019b9d5af9e50ae9d1e4e9efbab494f0d3a33281cb26570e16af2f2c31eb4aea286383de775613bf75622b1d58a030042171f8b9fb40b482c5305f69a58c48faea076ea5848dc227d4ec0243baac68345840ffc7e6a7160f0d96141b03055f32456ce4b7782e9c889100d0fc050c8d0af001f751c15625d0725d3fb949795847fa9ec054e0a7a5a40013e2ceed54f8a2de3a8dd58c604d91dd8c2de4e4ee5699a7aca6d77ec2bf4140761e1abd70c7a53cc483471fcee4e00556a6ba714f016bdcf7c64120e32df6e592af42a9d57f2d5d3b33477571a7c6e71e66f1ff77b06991c103c56f75e860c9f0fd9ebd50d8dd54509088c3480d91dbe72879ca2b09eb47dfabf0f7f912c098aa974a6c283edd7e7a63c66a892ed7c31d53081544936ca1d39630b2ed888c3778b5d387bf6e4b0578feaf12206d163b6c13c48d8c272d1c28e32d8394ca8836401ac4e85200e5f81b9f02ea3ac681c120a0d37bbb8d7593dd2e06c51470bdc4c82a2e51657694e60f872b922af9a12dd7b87ba330b357e4812fa6cf8b52a5ac85e1f12476c56636f7e7b222486c993bfa35230c6b64084cdcda87bc141e2ef90bd474db6012df50c77c3f94f3e942b0f6588ea52742534f91d7ac935000d85cd894f4ad7538f98913cbc9e00942bbc31bd072c7cf89bf52e54da6c42e208f99f028c18aaec15682fd05a72df4c09308fe99e946ca4be9773d25c10d68ce7e6590a6a5fd2b3cebd153beb869e7f4a0599f33a61ba2416fd2793340f677f0d43f666459d9b634013550d00480d693d02ac5a266a4530c30a08a2936866fa7c60d8b6e47a04c89e4a760b4490501d15b74f67d55a67df6f91a129c9f829ec53049e3a6faac8998f6e13a8185daff80103592be22da11fb1023fe3ceaabf020b5ee073f0be0764973f70fe2711cf8ec4c9374ca965edb965bf942c77530b9f2bf1ba910879f357c2d422acbcc5d739b13076cf2b29e9ca7fc18565c58cc634b105976cab8a9195591582a43b1c4309baf6969059d8f6daadd753b67116847f0b7d01f5e1425e5a34a54a770e882dc896bf65052315f80d21981561bcd339657122b63993cb3a35339640216144760794d9eb4f2a93096df007dd5b17d72cdd1fe49bfc4cfef3b018644c4256f9cd7c90cc823b1be0a13bf254b1ec661e13fd3a1a19b7fde57fa2f3975e9bb0c6e4def50802b78be073885ce9c0900e3c14c4cf62377ae408993fe8dd0e2650851f5de4355841d49e900ab22d43785ecffce42ecbd81f1a7c388bcd169e94f13cea2444d56b26307368c50e1e5e450d78f6e426aca360bf0c5ab54a50593c85658c0faabe5d35e3ea8c360da7dd63ce3f75165cfd619943ca7f52da00ebd41f6ec27c8017a2e6a10da84e571eee9c98d4adde70cbb8f7b4f60b089039d4e6321406b37a8b3d38e1685e654aa54f180797a00205c86a4234979b30eb65cd7a0a', $block);
  }

  public function testGetBlockSummaries_whenSuccessful_returnsListOfBlocks() {
    // Create a mock Response
    $jsonData = file_get_contents('tests/data/block_summaries.json');
    $mock = new MockHandler([
      new Response(200, ['Content-Type' => 'application/json'], $jsonData)
    ]);
    $handler = HandlerStack::create($mock);

    // execute the test
    $client = New InsightClient('http://localhost:3001/api/', $handler);
    $blocks = $client->getBlockSummaries(null, 3);

    $this->assertEquals(
      [
        "blocks" => [
          [
            "height" => 88012,
            "size" => 1909,
            "hash" => "0000000213b7d81cf4df10dd7b8bfa12a8b4fc01b3beb830be736a168e9e3584",
            "time" => 1518276094,
            "txlength" => 2,
            "poolInfo" => []
          ],
          [
            "height" => 88011,
            "size" => 3626,
            "hash" => "000000016790c0cf907460dc8965259aa48465e270511b41d4aad573b94ba4fb",
            "time" => 1518276062,
            "txlength" => 2,
            "poolInfo" => []
          ],
          [
            "height" => 88010,
            "size" => 6597,
            "hash" => "000000011551a4c0590eba26968f7bda32329a5f558d63cb2641cefc8f715ee9",
            "time" => 1518275890,
            "txlength" => 6,
            "poolInfo" => []
          ]
        ],
        "length" => 3,
        "pagination" => [
          "next" => "2018-02-11",
          "prev" => "2018-02-09",
          "currentTs" => 1518307199,
          "current" => "2018-02-10",
          "isToday" => true,
          "more" => true,
          "moreTs" => 1518307200
        ]
      ],
      $blocks
    );
  }

  public function testGetTransaction_whenSuccessful_returnsTransaction() {
    // Create a mock Response
    $jsonData = file_get_contents('tests/data/transaction.json');
    $mock = new MockHandler([
      new Response(200, ['Content-Type' => 'application/json'], $jsonData)
    ]);
    $handler = HandlerStack::create($mock);

    // execute the test
    $client = New InsightClient('http://localhost:3001/api/');
    $transaction = $client->getTransaction('24fd10f6ccbfdafc0a95212805a4e09b3cb8c1747f3e8481eeddf78c44f17895');
    print_r($transaction);
  }

}
?>
